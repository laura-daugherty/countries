{"version":3,"sources":["components/countryCard.tsx","components/searchbar.tsx","components/countriesList.tsx","components/header.tsx","components/countryPage.tsx","App.tsx","index.tsx"],"names":["CountryCard","props","className","isDarkmode","id","src","country","flag","name","population","region","capital","Searchbar","useState","search","setSearch","allCountries","setAllCountries","setFilteredCountries","filteredCountries","useEffect","axios","get","then","res","data","catch","err","console","log","filter","includes","placeholder","type","onChange","event","target","value","CountriesList","countries","map","to","alpha3Code","displayCountries","Header","onClick","document","getElementById","setIsDarkmode","toggleTheme","CountryPage","setCountry","match","params","Axios","response","error","history","goBack","alt","nativeName","subregion","topLevelDomain","currencies","currency","length","languages","language","borders","border","isCountry","App","exact","path","render","ReactDOM"],"mappings":"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","file":"static/js/main.7059bb3d.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport {Country} from './countriesList'\nimport './countryCard.css'\n\ntype Props = {\n  country: Country;\n  isDarkmode: boolean\n}\n\nconst CountryCard = (props:Props) => {\n\n  return (\n    <div className={props.isDarkmode ? \"countryCard dark\" : \"countryCard\"} id=\"countryCard\">\n    <img className=\"countryCard__img\" src={props.country.flag}/>\n    <div className=\"countryCard__div\">\n      <h2 className=\"countryCard__h2\"> {props.country.name}</h2>\n      <div className=\"info\">\n        <div className=\"info__div\">Population:</div> <div className=\" info__div info__div--props\">{props.country.population}</div> \n      </div>\n      <div className=\"info\">\n        <div className=\"info__div\">Region:</div> <div className=\"info__div--props\"> {props.country.region}</div>\n      </div>\n      <div className=\"info\">\n        <div className=\"info__div\">Capital:</div><div className=\"info__div--props\"> {props.country.capital}</div>\n      </div>\n    </div>\n  </div>\n  )\n};\nexport default CountryCard;","import React, { useState, Dispatch, useEffect } from 'react'\nimport { Country } from './countriesList';\nimport axios from 'axios'\nimport \"./searchbar.css\"\n\ntype Props = {\n  isDarkmode: boolean,\n  filteredCountries: Array<Country>\n  setFilteredCountries: Dispatch<any>\n}\n\nconst Searchbar = (props:Props) => {\n\n  const [search, setSearch] = useState({\n    country: \"\",\n    region: \"Filter by Region\"\n  })\n  const [allCountries, setAllCountries] = useState([] as any)\n\n  const {filteredCountries, setFilteredCountries} = props\n\n  useEffect(() => {\n    axios\n      .get ('https://restcountries.eu/rest/v2/all')\n      .then(\n        res => {\n          setFilteredCountries(res.data)\n          setAllCountries(res.data)\n        }\n      )\n      .catch(err => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    setFilteredCountries(allCountries.filter((country: Country) => {\n      if (search.region !== \"Filter by Region\") {\n        if (!country.region.includes(search.region)) {\n          return false\n        }\n      } \n\n      if (search.country !== \"\") {\n        if (!country.name.includes(search.country)) {\n          return false\n        }\n      }\n\n      return true\n    }))\n  }, [search])\n\n  const changeHandler = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setSearch({\n      ...search,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const regionHandler = (event:React.ChangeEvent<HTMLSelectElement>) => {\n   setSearch({\n      ...search,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n\n\n  return (\n      <div className=\"searchbar\">\n        <input \n          placeholder=\"Search for a country...\"\n          className={props.isDarkmode ? \"searchbar__input dark\" : \"searchbar__input\"}\n          type=\"text\"\n          name=\"country\"\n          onChange={changeHandler}>\n        </input>\n        <div className=\"select\">\n          <select className={props.isDarkmode ? \"select__select dark\" : \"select__select\"}  name=\"region\" onChange={regionHandler}>\n            <option value=\"Filter by Region\">Filter by Region</option>\n            <option value=\"Africa\">Africa</option>\n            <option value=\"America\">America</option>\n            <option value=\"Asia\">Asia</option>\n            <option value=\"Europe\">Europe</option>\n            <option value=\"Oceania\">Oceania</option>\n          </select>\n        </div>\n      </div>\n  )\n};\nexport default Searchbar;","import React, { useState } from 'react'\nimport CountryCard from './countryCard'\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"./searchbar\"\nimport './countriesList.css'\n\ntype Props = {\n  isDarkmode: boolean\n}\n\ntype Currency = {\n  code: string,\n  name: string,\n  symbol: string\n}\n\ntype Language = {\n  name: string\n}\n\nexport type Country = {\n  name: string,\n  region: string,\n  population: number,\n  capital: string,\n  flag: string,\n  borders: string[],\n  nativeName: string,\n  subregion: string,\n  topLevelDomain: string[],\n  currencies: Currency[],\n  languages: Language[],\n  alpha3Code: string\n}\n\n\nexport const CountriesList = (props: Props) => {\n  const [filteredCountries, setFilteredCountries] = useState([] as any)\n\n  function displayCountries(countries: Array<Country>) {\n    if (countries) {\n      return countries.map(country => {\n        return (\n          <Link className=\"linkToCountry\"to={`/countries/${country.alpha3Code}`}>\n            <CountryCard key={country.alpha3Code} country = {country} isDarkmode = {props.isDarkmode}/>\n          </Link>\n        )\n      })\n    } else {\n      console.log(\"no countries\")\n    }\n  }\n\n\n  return (\n    <div className=\"countriesList\">\n      <SearchBar isDarkmode={props.isDarkmode} setFilteredCountries={setFilteredCountries} filteredCountries={filteredCountries}/>\n      <div className=\"countriesList__div\">{displayCountries(filteredCountries)}</div>\n    </div>\n\n  )\n};","import React, { Dispatch, SetStateAction } from 'react'\nimport { Link } from 'react-router-dom';\nimport \"./header.css\"\n\ntype Props = {\n  isDarkmode: boolean\n  setIsDarkmode: Dispatch<SetStateAction<boolean>>\n}\n\nfunction toggleTheme(props: Props) {\n  const themeToggle = document.getElementById('theme-toggle');\n  if (!props.isDarkmode) {\n    props.setIsDarkmode(true)\n  } else {\n    props.setIsDarkmode(false)\n  }\n}\n\nconst Header = (props:Props) => {\n  return (\n    <div>\n      <div className={props.isDarkmode?\"header dark\": \"header\"} id=\"header\">\n        <h1><Link className=\"header__Link\" to=\"/\">Where in the world?</Link></h1>\n        <div>\n          <i className=\"far fa-moon\"></i>\n          <button id=\"theme-toggle\" onClick={() => {toggleTheme(props)}}>Dark Mode</button>\n        </div>\n      </div>\n    </div>\n  )\n};\nexport default Header;","import { useEffect, useState } from 'react'\nimport {Country} from './countriesList'\nimport React from 'react';\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport \"./countrypage.css\"\ntype Props = {\n  match: { params: { \n    alpha3Code: any\n  }; }\n  history: { goBack: () => void; },\n  isDarkmode: boolean,\n}\n\nconst CountryPage = (props: Props) => {\n  const countryNull: Country | null = null;\n\n  const [country, setCountry] = useState(countryNull)\n\n  useEffect(() => {\n    console.log(\"props\", props)\n    const alpha3Code = props.match.params.alpha3Code;\n    Axios\n      .get(`https://restcountries.eu/rest/v2/alpha/${alpha3Code}`)\n      .then(response => {\n        setCountry(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [props.match.params.alpha3Code])\n \n function isCountry(country: Country | null) {\n  if (country && country.flag && country.name && country.population && country.region && country.capital) {\n    return (\n      <div className=\"country_page\">\n        <button className={props.isDarkmode ? \"country_page__button dark\":\"country_page__button\"}onClick={() => {props.history.goBack()}}>\n          <i className=\"country_page__icon fas fa-arrow-left\"></i> \n          Back\n        </button>\n        <div className=\"country_page__container\">\n          <img className=\"country_page__img\"src={country.flag} alt={country.name}/>\n          <div className=\"country_page__div\">\n            <h2 className=\"country_page__h2\"> {country.name}</h2>\n            <div className=\"country_info\">\n              <div className=\"country_info__div1\">\n                <p className=\"country_info__p\"><b>Native Name:</b> {country.nativeName}</p>\n                <p className=\"country_info__p\"><b>Population:</b> {country.population}</p>\n                <p className=\"country_info__p\"> <b>Region:</b> {country.region}</p>\n                <p className=\"country_info__p\"><b>Sub Region:</b> {country.subregion}</p>\n                <p className=\"country_info__p\"><b>Capital:</b> {country.capital}</p>\n              </div>\n              <div className=\"country_info__div2\">\n                <p className=\"country_info__p\"><b>Top Level Domain:</b> {country.topLevelDomain}</p>\n                <p className=\"country_info__p\"><b>Currencies:</b> {country.currencies.map(currency => {\n                  return (country.currencies.length > 1 ? <div>{currency.name}, </div> : <div> {currency.name}</div>)\n                  })}</p>\n                <p className=\"country_info__p\"><b>Languages:</b> {country.languages.map(language => {\n                  return (country.languages.length > 1 ? <div>{language.name},</div> : <div>{language.name}</div>)\n                })}</p>\n              </div>\n            </div>\n              <p className=\"country_info__p country_info__border\"><b>Border Countries:</b></p> \n              <div className=\"country_info__border_container\">\n                {country.borders.map(border => {\n                  return (\n                    <Link className={props.isDarkmode ? \"country_info__Link dark\" : \"country_info__Link\"} to={`/countries/${border}`}>{border}</Link>\n                  )\n                })}\n              </div>\n            </div>\n          </div>    \n        </div>\n    )\n  }\n }\n  return (\n    <div>\n      {isCountry(country)}\n    </div>\n  )\n};\n\nexport default CountryPage;\n","import React, { useState } from 'react';\nimport { Route } from \"react-router-dom\";\nimport './App.css';\n\nimport {CountriesList} from './components/countriesList'\nimport Header from './components/header'\nimport CountryPage from './components/countryPage';\n\nfunction App() {\n  const [isDarkmode, setIsDarkmode] = useState(false)\n\n  return (\n    <div className={isDarkmode ? \"App dark\" : \"App\"}>\n      <Header isDarkmode={isDarkmode} setIsDarkmode={setIsDarkmode}/>\n      <Route exact path=\"/\" render={(props) => <CountriesList {...props} isDarkmode={isDarkmode}/>}/>\n      <Route\n          path=\"/countries/:alpha3Code\"\n          render={(props) => <CountryPage {...props} isDarkmode={isDarkmode}/>}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}